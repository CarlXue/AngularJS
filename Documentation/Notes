# Angular JS note

## 1. First Application
1.1 __Define a new module__  
`var app = angular.module("App_name",[]);`  

1.2 __Add app config in html__  
Add `ng-app="App_name"` in the `<body>` tag  
`ng-app` is called a _directive_.  
`ng-controller` is similar.  
`{{ var... }}` is called _expression_  

1.3 __workflow__  
I.   Create a module, and use `ng-app` in the view to define the application scope.  
II.  Create a controller, and use `ng-controller` in the view to define the controller scope.  
III. Add data to `$scope` in the controller so they can be displayed with expressions in the view.  

1.4 __Normal controller syntax__

```
app.controller('MainController', ['$scope',function($scope) {
}]); 
```

1.5 __View Filter__  
` {{ var | filter }} `  

1.6 __Loop in View__  
`ng-repeat="product in products"`  

1.7 __Image Source__  
`ng-src="{{  }}"`  

1.8 __Directive__  
Directives bind behavior to HTML elements. When the app runs, AngularJS walks through each HTML element looking for directives. When it finds one, AngularJS triggers that behavior (like attaching a scope or looping through an array).

1.9 __Set Function__  
`ng-click="function_name()"`  

## 2. Directives
2.1 __General__  
Directives are a powerful way to create self-contained, interactive components. Unlike jQuery which adds interactivity as a layer on top of HTML, AngularJS treats interactivity as a native component of HTML.

  
2.2 __Define Directives__

```
app.directive('appInfo', function() { 
  return { 
    restrict: 'E', 
    scope: { 
      info: '=' 
    }, 
    templateUrl: 'js/directives/appInfo.html' 
  }; 
});
```
  
2.3 __How to Use it in View__
```
<app-info info="shutterbugg"></app-info>
```  

2.4 __Directive with link option__  

```
app.directive('installApp', function() {
  return {
    restrict: 'E',
    scope: {

    },
    templateUrl: 'js/directives/installApp.html',
    link: function(scope, element, attrs){
      scope.buttonText = "Install",
        scope.installed = false,
        scope.download = function() {
        element.toggleClass('btn-active');
        if(scope.installed) {
          scope.buttonText = "Install";
          scope.installed = false;
        }else{
          scope.buttonText = "Uninstall";
          scope.installed = true;
        }
      }
    }
  };
});
```  

2.5 __Sequence of coding__  
* First, write the app.directive  
* Then attach the js file to html  
* Write the template html file  
* Replace the block html code with template html  

## 3. Service





